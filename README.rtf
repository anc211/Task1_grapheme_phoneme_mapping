{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 ArialMT;}
{\colortbl;\red255\green255\blue255;\red26\green26\blue26;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c13333\c13333\c13333;\cssrgb\c100000\c100000\c100000;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Version control\
\
v3 - vowels and consonants are in separate trials, presented one at a time, graph presented with the sound, no sound on clicking is implemented\
\
v4 - vowels and consonants are in separate blocks, consonants presents in pairs, first a new graph + sound are presented, then the graph + speaker items to click on, but no sound on clicking is incorporated yet\
\
V6 - everything works well expect that sound doesn\'92t play on mouse click\
\
\
\
V7\
\
# begin routine\
mySound1 = sound.Sound('phoneme_practice1')\
mySound2 = sound.Sound('phoneme_practice2')\
\
\
# Each frame\
response = event.getKeys(keyList = ['left','right'])\
\
if 'left' in response:\
    phoneme_practice1.play()\
elif 'right' in response:\
    phoneme_practice2.play()\
\
\
if 'left' in key_select_sound.keys:\
    phoneme_practice1.play\
elif 'right' in key_select_sound.keys:\
    phoneme_practice2.play\
\
\
\
\
\
\
\pard\pardeftab720\sl300\partightenfactor0

\f1\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 You could create a Code component. In the Begin Experiment box, put something like:\
\
keyTone = sound.Sound(u'A', secs=0.5) # a brief sound that will play when needed.\
\
Then in the Each Frame box, put something like:\
\
if t < 1.3:\
\'a0 \'a0 keyPress = event.getKeys(keyList = ['x', 'z'], timeStamped = True) # check for a key\
\'a0 \'a0 if len(keyPress) > 0: # if there was one, then\
\'a0 \'a0 \'a0 \'a0 keyTone.play() # play the sound\
\'a0 \'a0 \'a0 \'a0 thisExp.addData('response', keyPress) # store the data\
\
This is untested pseudo code and could/should be improved to separate out the keys and the reaction time, but it might get things started?\
\
As mentioned, the sound and keyboard components should be deleted, as this code is starting to handle their roles.\
}